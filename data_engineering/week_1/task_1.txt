################################
#   SET-UP CLOUD ENVIRONMENT   #
################################
GROUP_NAME="data-exploration"
VM_NAME="dataengg2"
ADMIN_USER="clouduser"
PASSWORD=<password>

az group create \
  --name $GROUP_NAME \
  --location eastus

az vm create \
  --resource-group $GROUP_NAME \
  --name $VM_NAME \
  --size Standard_B2ms \
  --image Canonical:0001-com-ubuntu-server-focal:20_04-lts:latest \
  --authentication-type password \
  --admin-username $ADMIN_USER \
  --admin-password $PASSWORD

PUBLIC_IP=$(az vm show -d \
  -g $GROUP_NAME \
  -n $VM_NAME \
  --query publicIps \
  -o tsv)

echo -e "\nVM: $VM_NAME\nPublic IP Address: $PUBLIC_IP\n"

ssh $ADMIN_USER@$PUBLIC_IP



##################################
#   SET-UP VIRTUAL ENVIRONMENT   #
##################################
wget https://clouddataengineer.blob.core.windows.net/data-exploration/handout/project-data-exploration.zip
sudo apt install unzip
unzip project-data-exploration.zip



##############
#   TODO 1   #
##############
# find_confidential.sh
grep -il "confidential" emails/*



##############
#   TODO 2   #
##############
# count_confidential.sh
./find_confidential.sh | wc -l



##############
#   TODO 3   #
##############
# find_phone_numbers.sh
grep -Pil '\b\d{3}[\W]*\d{3}[\W]*\d{4}\b' emails/*



##############
#   TODO 4   #
##############
# count_phone_numbers
./find_phone_numbers.sh | wc -l



##############
#   TODO 5   #
##############
# hide_phone_numbers.sh
mkdir -p anon_emails
for file_name in emails/*; do
    sed -E 's/[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9.-]+/<EMAIL_REMOVED>/gI' "$file_name" |
    sed -E 's/(^|[\(\) \t+.:?@#=-])[0-9]{3}[\/\) .-]*[0-9]{3}[ .-]*[0-9]{4}([\/\(\) \t.,;?=<>&-]|$)/\1<PHONE_REMOVED>\2/g' > anon_"$file_name"

    # (^|[\(\) \t+.:?@#=-])
    # pattern is anchored to start of line or pattern is preceded by one of the following characters:
    # ['(', ')', ' ', '\t', '.', ':', '?', '@', '#', '=', '+', '-']

    # [0-9]{3}
    # pattern then must have a run of three digits

    # [\/\) .-]*
    # pattern then may only contain any number of the following characters:
    # ['/', ')', ' ', '.', '-']

    # [0-9]{3}
    # pattern then must have another run of three digits

    # [ .-]*
    # pattern then may only contain any number of the following characters:
    # [' ', '.', '-']

    # [0-9]{4}
    # pattern then must have a run of four digits

    # ($|[\/\(\) \t.,;?=<>&-])
    # pattern is anchored to end of line or pattern is then succeeded by one of the following characters:
    # ['/', '(', ')', '<', '>', ' ', '\t', '.', ',', ';', '?', '&', '=', '-']

    # /\1<PHONE_REMOVED>\2/
    # preserve preceding character, replaces pattern with '<PHONE_REMOVED>', and preserves succeeding character
done



##############
#   TODO 6   #
##############
# find_course.sh
awk -F'\t' '$2 ~ /Python/ && $4=="False" {print $2}' udemy_courses_v2.csv
