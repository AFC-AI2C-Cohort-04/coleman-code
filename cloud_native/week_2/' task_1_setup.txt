# still failing at packer build

# azure variables
export subscription_id=$(az account list --query "[?isDefault].id" --output tsv)
LOCATION=eastus2
MAIN_RG=main_rg
MAIN_VM=main_vm
TEST_RG=test_rg
TEST_VM=test_vm
VM_SIZE=Standard_B2s
USERNAME=azureuser
PASSWORD=<PASSWORD> # <<< minimum 12 characters, and 3 of lower/upper/digit/special

# create main resource group and vm
az group create --name $MAIN_RG --location $LOCATION
az vm create \
  --resource-group $MAIN_RG \
  --name $MAIN_VM \
  --image Ubuntu2204 \
  --size $VM_SIZE \
  --admin-username $USERNAME \
  --admin-password $PASSWORD \
  --location $LOCATION

# open ports on main vm
az vm open-port --resource-group $MAIN_RG --name $MAIN_VM --port 22 --priority 1001
az vm open-port --resource-group $MAIN_RG --name $MAIN_VM --port 8000 --priority 1002
az vm open-port --resource-group $MAIN_RG --name $MAIN_VM --port 8080 --priority 1003

# ssh into vm and authenticate with password
PUBLIC_IP=$(az vm show -d -g $MAIN_RG -n $MAIN_VM --query publicIps -o tsv)
ssh $USERNAME@$PUBLIC_IP

# get handout and change directory name to project
wget https://cloudnativehandout.blob.core.windows.net/project1/handout.tar.gz
tar -xvzf handout.tar.gz
mv ~/handout ~/project

# get terraform
sudo apt-get update && sudo apt-get install -y gnupg software-properties-common
wget -O- https://apt.releases.hashicorp.com/gpg | \
gpg --dearmor | \
sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg
gpg --no-default-keyring \
--keyring /usr/share/keyrings/hashicorp-archive-keyring.gpg \
--fingerprint
echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] \
https://apt.releases.hashicorp.com $(lsb_release -cs) main" | \
sudo tee /etc/apt/sources.list.d/hashicorp.list
sudo apt update
sudo apt-get install terraform

# get azure cli and login
curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
az login --use-device-code

# get maven, kubectl, and helm
sudo apt-get install maven openjdk-17-jdk openjdk-17-jre jq -y
curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

# set-up monolith db (23~30 minutes)
cd ~/project/cloudchat/terraform-setup/task1-monolith_data_tier
terraform init
terraform apply -var-file="secret.tfvars"

# export terraform outputs into variables
echo "export MYSQL_HOST=$(terraform output -raw mysql_fqdn)" > export_variables.sh
echo "export MYSQL_USER=$(terraform output -raw mysql_admin_username)" >> export_variables.sh
echo "export MYSQL_PASSWORD=$(terraform output -raw mysql_admin_password)" >> export_variables.sh
echo "export SPRING_REDIS_HOST=$(terraform output -raw redis_hostname)" >> export_variables.sh
echo "export SPRING_REDIS_PASSWORD=$(terraform output -raw redis_primary_access_key)" >> export_variables.sh
echo "export SPRING_REDIS_PORT=$(terraform output -raw redis_port)" >> export_variables.sh
chmod +x export_variables.sh
./export_variables.sh

# test application
cd ~/project/cloudchat/task1-monolith
mvn clean package
java -jar ./target/cloudchat-1.0.0.jar
# go to http:[MAIN_VM_IP]:8080/login and login with username: lucas, password: lucas

# get packer
cd ~
sudo apt-get install packer
packer plugins install github.com/hashicorp/azure
cd ~/project/cloudchat/task1-monolith/packer

# update these files in ~/project/cloudchat/task1-monolith/packer
# - azure-packer.pkr.hcl
# - run_monolith.sh

# create azure principle and write environment variables to secret.pkrvars.hcl
az group create -l eastus2 -n $TEST_RG
sp_info=($(az ad sp create-for-rbac --role Contributor --scopes /subscriptions/$subscription_id --query "[appId, password, tenant]" --output tsv))
echo client_id=\"${sp_info[0]}\" > secret.pkrvars.hcl
echo client_secret=\"${sp_info[1]}\" >> secret.pkrvars.hcl
echo tenant_id=\"${sp_info[2]}\" >> secret.pkrvars.hcl
echo subscription_id=\"$subscription_id\" >> secret.pkrvars.hcl

packer validate \
  -var-file="secret.pkrvars.hcl" \
  -var "managed_image_name=${TEST_VM}" \
  -var "resource_group=${TEST_RG}" .

# fails to load context for cloudchat app after attempting to build maven
packer build \
  -var-file="secret.pkrvars.hcl" \
  -var "managed_image_name=${TEST_VM}" \
  -var "resource_group=${TEST_RG}" .

az vm create \
  --resource-group $TEST_RG \
  --name $TEST_VM \
  --image Ubuntu2204 \
  --admin-username $USERNAME \
  --generate-ssh-keys

# submitter
cd ~/project
wget https://cloudnativehandout.blob.core.windows.net/project1/submitter && chmod +x submitter
./submitter task1
