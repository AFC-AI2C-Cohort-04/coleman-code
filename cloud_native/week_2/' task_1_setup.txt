# azure variables
RG_NAME=rg_main
LOCATION=eastus2
VM_NAME=vm_main
VM_SIZE=Standard_B2s
USERNAME=clouduser
PASSWORD=<PASSWORD>

# create group and vm
az group create --name $RG_NAME --location $LOCATION
az vm create \
  --resource-group $RG_NAME\
  --name $VM_NAME \
  --image Ubuntu2204 \
  --size $VM_SIZE \
  --admin-username $USERNAME \
  --admin-password $PASSWORD \
  --location $LOCATION

# open ports
az vm open-port --resource-group $RG_NAME --name $VM_NAME --port 22 --priority 1001
az vm open-port --resource-group $RG_NAME --name $VM_NAME --port 8000 --priority 1002
az vm open-port --resource-group $RG_NAME --name $VM_NAME --port 8080 --priority 1003

# ssh and authenticate with password
PUBLIC_IP=$(az vm show -d -g $RG_NAME -n $VM_NAME --query publicIps -o tsv)
ssh $USERNAME@$PUBLIC_IP

# get handout
wget https://cloudnativehandout.blob.core.windows.net/project1/handout.tar.gz
tar -xvzf handout.tar.gz

# get terraform
sudo apt-get update && sudo apt-get install -y gnupg software-properties-common
wget -O- https://apt.releases.hashicorp.com/gpg | \
gpg --dearmor | \
sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg
gpg --no-default-keyring \
--keyring /usr/share/keyrings/hashicorp-archive-keyring.gpg \
--fingerprint
echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] \
https://apt.releases.hashicorp.com $(lsb_release -cs) main" | \
sudo tee /etc/apt/sources.list.d/hashicorp.list
sudo apt update
sudo apt-get install terraform

# get azure cli and login
curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
az login --use-device-code

# get maven, kubectl, and helm
sudo apt-get install maven openjdk-17-jdk openjdk-17-jre jq -y
curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

# set-up monolith db (23~30 minutes)
cd ~/handout/cloudchat/terraform-setup/task1-monolith_data_tier
terraform init
terraform apply -var-file="secret.tfvars"

# load and export terraform outputs into variables
export MYSQL_HOST=$(terraform output -raw mysql_fqdn)
export MYSQL_USER=$(terraform output -raw mysql_admin_username)
export MYSQL_PASSWORD=$(terraform output -raw mysql_admin_password)
export SPRING_REDIS_HOST=$(terraform output -raw redis_hostname)
export SPRING_REDIS_PASSWORD=$(terraform output -raw redis_primary_access_key)
export SPRING_REDIS_PORT=$(terraform output -raw redis_port)

# test build application
cd ~/handout/cloudchat/task1-monolith
mvn clean package
java -jar ./target/cloudchat-1.0.0.jar

# get packer
cd ~
sudo apt-get install packer
packer plugins install github.com/hashicorp/azure

# create azure principle
RG_TEST=test_rg
VM_TEST=test_vm
SUBSCRIPTION_ID=$(az account list --query "[?isDefault].id" --output tsv)
az group create -l eastus2 -n $RG_TEST

# primary directory for task 1 submission
cd ~/handout/cloudchat/task1-monolith/packer

# write environment variables to secret.pkrvars.hcl
sp_info=($(az ad sp create-for-rbac --role Contributor --scopes /subscriptions/$SUBSCRIPTION_ID --query "[appId, password, tenant]" --output tsv))
echo client_id = \"${sp_info[0]}\" > secret.pkrvars.hcl
echo client_secret = \"${sp_info[1]}\" >> secret.pkrvars.hcl
echo tenant_id = \"${sp_info[2]}\" >> secret.pkrvars.hcl
echo subscription_id = \"$SUBSCRIPTION_ID\" >> secret.pkrvars.hcl

# ensure you have updated files
# - azure-packer.pkr.hcl
# - run_monolith.sh

packer validate \
  -var-file="secret.pkrvars.hcl" \
  -var "managed_image_name=${VM_TEST}" \
  -var "resource_group=${RG_TEST}" .

packer build \
  -var-file="secret.pkrvars.hcl" \
  -var "managed_image_name=${VM_TEST}" \
  -var "resource_group=${RG_TEST}" .

az vm create \
  --resource-group $RG_TEST \
  --name myVM \
  --image $VM_TEST \
  --admin-username $USERNAME \
  --generate-ssh-keys

# submitter
cd ~/handout
wget https://cloudnativehandout.blob.core.windows.net/project1/submitter && chmod +x submitter
./submitter task1
